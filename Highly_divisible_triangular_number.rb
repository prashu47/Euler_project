# frozen_string_literal: true

# The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
#
# 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
#
# Let us list the factors of the first seven triangle numbers:
#
#  1: 1
#  3: 1,3
#  6: 1,2,3,6
# 10: 1,2,5,10
# 15: 1,3,5,15
# 21: 1,3,7,21
# 28: 1,2,4,7,14,28
# We can see that 28 is the first triangle number to have over five divisors.
#
# What is the value of the first triangle number to have over five hundred divisors?

#================================================================================================#
# logic for tringular numbers
def triangular_number_logic(range)
  sum = 0

  (1..range).each { |num| sum += num }
  sum
  end

# logic for divisors(factors)
def divisors(num)
  division = (1..(num / 2)).select { |n| num % n == 0 }
  division << num
  division.length
end

# method for count the divisors
def counting_the_divisor
  i = 12370
  count = 0
  triagular_factor = 0
  loop do
    triagular_factor = triangular_number_logic(i)
    p triagular_factor
    count = divisors(triagular_factor)
    break if count > 500

    p count
    i += 1
  end
  p triagular_factor
  p count
end
# p divisors(12000)
counting_the_divisor
